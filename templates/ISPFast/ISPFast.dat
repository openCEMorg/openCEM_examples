# NEM ISP template scenario
set regions :=
[regions];

set zones :=
[zones];

set all_tech :=
[alltech];
# Set of generator technologies available in each zone
set gen_tech_in_zones :=
[gentech];

# Set of generator technologies that can be retired by the model
set retire_gen_tech_in_zones :=
[retiretech];

# Set of emitting/fuel generator technologies
set fuel_gen_tech_in_zones :=
[fueltech];

# Set of emitting/fuel generator technologies
set commit_gen_tech_in_zones :=
[committech];

# Set of renewable energy generator technologies
set re_gen_tech_in_zones :=
[regentech];

# Set of dispatchable generators
set disp_gen_tech_in_zones :=
[dispgentech];

# Set of dispatchable generators
set re_disp_gen_tech_in_zones :=
[redispgentech];

#Set of storage technologies in each zones
set stor_tech_in_zones :=
[stortech];

# Set of hybrid technologies available in each zone
set hyb_tech_in_zones :=
[hybtech];

#Retrieve fuel costs for defined technologies
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT cap.ntndp_zone_id AS zones, cap.technology_type_id AS all_tech, avg(fuel.price) as cost_fuel
FROM fuel_price fuel
INNER JOIN capacity cap ON cap.id=fuel.capacity_id
WHERE fuel.year=XXXX AND fuel.fuel_scenario_id =7
AND (cap.ntndp_zone_id,cap.technology_type_id) in
[fueltechdb]
group by zones,all_tech
UNION ALL
SELECT ntndp_zone_id AS zones, technology_type_id AS all_tech, avg(price) as cost_fuel
FROM fuel_price_new
WHERE year=XXXX AND fuel_scenario_id =7
AND (ntndp_zone_id, technology_type_id) in
[fueltechdb]
group by zones,all_tech;" :[zones,all_tech] cost_fuel;

#Retrieve fuel heat rates for default technologies
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT cap.ntndp_zone_id AS zones, cap.technology_type_id AS all_tech, avg(heat.heat_rate) as fuel_heat_rate
FROM heat_rates heat
INNER JOIN capacity cap ON cap.id=heat.capacity_id
AND (cap.ntndp_zone_id,cap.technology_type_id) in
[fueltechdb]
group by zones,all_tech
UNION ALL
SELECT * FROM
    (SELECT ntndp_zone.id AS zones, technology_type_id AS all_tech, heat_rate AS fuel_heat_rate
    FROM heat_rates_new FULL JOIN ntndp_zone) AS tmp
WHERE
    (zones , all_tech) IN [fueltechdb]" :[zones,all_tech] fuel_heat_rate;

#Ordered set of timestams to retrieve traces for dispatch calculations
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
format=set
query="SELECT DISTINCT CAST(timestamp AS CHAR)
FROM demand_and_rooftop_traces
WHERE timestamp [timerange]
AND demand_scenario_id=8
AND MINUTE(timestamp)=0 AND reference_year=2014 order by timestamp;" :t;

# Build costs for gentech
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT ntndp_zone_id as zones, technology_type_id as all_tech, cost_factor as regional_cost_factor
FROM regional_cost_factor
WHERE source_id = 3
AND ntndp_zone_id in ([zoneslist])
and technology_type_id in ([alltechlist])" :[zones, all_tech] regional_cost_factor;

# Build costs for stortech
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT ntndp_zone_id as zones, technology_type_id as all_tech, connection_cost
FROM isp_connection_costs
WHERE source_id = 3
AND ntndp_zone_id in ([zoneslist])
and technology_type_id in ([alltechlist])" :[zones, all_tech] connection_cost;

# Build costs for hybtech
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT technology_type_id as all_tech, capex as build_cost
FROM isp_capex
WHERE source_id in (3,4) and year = XXXX and build_cost_scenario_id = 8
and technology_type_id in ([alltechlist])" : [all_tech] build_cost;


# FOM VOM costs for gentech
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="
SELECT all_tech, cost_gen_fom, cost_gen_vom, max(source_id) FROM
((SELECT cap.technology_type_id as all_tech, avg(oe.fom) as cost_gen_fom, avg(oe.vom) as cost_gen_vom, cap.source_id FROM opex_existing oe
INNER JOIN capacity cap on cap.id = oe.capacity_id
where cap.source_id in (3,4) and technology_type_id in ([gentechlist])
group by all_tech)
UNION
(select opex.technology_type_id as all_tech, opex.fom as cost_gen_fom, opex.vom as cost_gen_vom, max(opex.source_id) from opex
where opex.technology_type_id in ([gentechlist])
group by opex.technology_type_id)) AS union_table
group by union_table.all_tech;": [all_tech] cost_gen_fom cost_gen_vom;

# FOM VOM costs for stortech
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT technology_type_id AS all_tech, fom AS cost_stor_fom, vom AS cost_stor_vom
FROM opex WHERE source_id in (3,4) and technology_type_id in ([stortechlist]) GROUP BY technology_type_id;": [all_tech] cost_stor_fom cost_stor_vom;

# FOM VOM costs for hybtech
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT technology_type_id AS all_tech, fom AS cost_hyb_fom, vom AS cost_hyb_vom
FROM opex WHERE source_id in (3,4) and technology_type_id in ([hybtechlist]) GROUP BY technology_type_id;": [all_tech] cost_hyb_fom cost_hyb_vom;

#Starting capacity (either cfrom capacity table or carry forward from previous)
[carryforwardcap]

#Load carry_forward costs from openCEM_cap_hist
# TODO change location to database
load "cemo/openCEM_cap_hist.db" using=sqlite3
query="SELECT ntndp_zone_id as zone, sum(annualised_capex) as cost_cap_carry_forward_hist
FROM NEM_fleet
WHERE zone in ([zoneslist])
AND commissioning_year < 2018
AND years_to_EOL_2020-(XXXX-2020)>0
group by ntndp_zone_id": [zone] cost_cap_carry_forward_hist;

# Exogenously commissioned capacity
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="select ntndp_zone_id as zones, technology_type_id as all_tech, sum(reg_cap) as gen_cap_exo
from capacity
where (ntndp_zone_id,technology_type_id) in
[gentechdb]
and commissioning_year >WWWW and commissioning_year<=XXXX and source_id=3
group by zones,all_tech;" : [zones,all_tech] gen_cap_exo;

load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="select ntndp_zone_id as zones, technology_type_id as all_tech, sum(reg_cap) as stor_cap_exo
from capacity
where (ntndp_zone_id,technology_type_id) in
[stortechdb]
and commissioning_year >WWWW and commissioning_year<=XXXX and source_id=3
group by zones,all_tech;" : [zones,all_tech] stor_cap_exo;

load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="select ntndp_zone_id as zones, technology_type_id as all_tech, sum(reg_cap) as hyb_cap_exo
from capacity
where (ntndp_zone_id,technology_type_id) in
[hybtechdb]
and commissioning_year >WWWW and commissioning_year<=XXXX and source_id=3
group by zones,all_tech;" : [zones,all_tech] hyb_cap_exo;


# Exogenously retired capacity
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="select ntndp_zone_id as zones, technology_type_id as all_tech, sum(reg_cap) as ret_gen_cap_exo
from capacity
where (ntndp_zone_id,technology_type_id) in
[retiretechdb] and retirement_year >WWWW and retirement_year<=XXXX
and source_id=3
group by zones,all_tech;" : [zones,all_tech] ret_gen_cap_exo;

#capacity factors for technologies with traces
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT ntndp_zone_id AS zones, technology_type_id AS all_tech, cast(timestamp AS CHAR) AS t, avg(mw) AS gen_cap_factor
FROM wind_and_solar_traces
WHERE timestamp [timerange]
AND MINUTE(timestamp)=0
AND (ntndp_zone_id, technology_type_id) IN [gentechdb]
AND source_id = 3 and financial_year = XXXX and reference_year = 2014
GROUP BY ntndp_zone_id, technology_type_id, timestamp;" : [zones,all_tech,t] gen_cap_factor;

# Hybrid tech capacity factor, reroute CSP to opencem_community
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_community
user=select password=select_password1 using=pymysql
query="
SELECT ntndp_zone_id AS zones, technology_type_id AS all_tech, cast(timestamp AS CHAR) AS t, avg(mw) AS hyb_cap_factor
FROM wind_and_solar_traces
WHERE timestamp [timerange]
AND MINUTE(timestamp)=0
AND (ntndp_zone_id, technology_type_id) IN [hybtechdb]
GROUP BY ntndp_zone_id, technology_type_id, timestamp;" : [zones,all_tech,t] hyb_cap_factor;

#Demand for for all regions for the given time interval
load "opencem-isp2020.cyisekdyolmb.ap-southeast-2.rds.amazonaws.com" database=opencem_input
user=select password=select_password1 using=pymysql
query="SELECT cast(timestamp AS CHAR) AS t, region_id AS regions, opso_poe10 AS region_net_demand
FROM demand_and_rooftop_traces
WHERE timestamp [timerange]
AND MINUTE(timestamp)=0
AND demand_scenario_id =8
AND region_id in ([regionslist]) AND reference_year=2014
order BY regions,t;": [regions,t] region_net_demand;
